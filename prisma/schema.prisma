// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String             @id @default(cuid())
  name               String?
  email              String?            @unique
  emailVerified      DateTime?
  image              String?
  role               String             @default("USER")
  accounts           Account[]
  sessions           Session[]
  forumCategories    ForumCategory[]
  forumSubCategories ForumSubCategory[]
  forumTopics        ForumTopic[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ForumCategory {
  id                 String             @id @default(cuid())
  name               String
  slug               String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  userId             String
  user               User               @relation(fields: [userId], references: [id])
  forumSubCategories ForumSubCategory[]
}

model ForumSubCategory {
  id              String        @id @default(cuid())
  name            String
  slug            String
  description     String        @db.Text
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  forumCategoryId String
  userId          String
  forumCategory   ForumCategory @relation(fields: [forumCategoryId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  forumTopics     ForumTopic[]
}

model ForumTopic {
  id                 String   @id @default(cuid())
  name               String
  slug               String
  message            String   @db.Text
  isSticky           Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             String
  forumSubCategoryId String

  user             User             @relation(fields: [userId], references: [id])
  forumSubCategory ForumSubCategory @relation(fields: [forumSubCategoryId], references: [id])
}
